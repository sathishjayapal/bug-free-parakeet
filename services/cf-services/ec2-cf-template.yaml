AWSTemplateFormatVersion: 2010-09-09
Description: Deploy template 2 - Project 1
Parameters:
  AmazonLinuxAMIID:
    Type: String
    Description: Enter Sathish Machine AMI ID
    Default: ami-09704eb9073cf6ed0
  CFNStackName:
    Type: String
    Description: Enter stackname
  BastionAMI:
    Type: String
    Description: Enter Bastion Information
    Default: ami-00a36856283d67c39
Resources:
  WebServerInstance1:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref AmazonLinuxAMIID
      InstanceType: t2.micro 
      SecurityGroupIds: !Split 
                - ","
                - Fn::ImportValue: 
                    !Sub "${CFNStackName}-WebInstanceSecurityGroup"
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${CFNStackName}-PrivateSubnet1"
      Tags:
        - Key: name
          Value: !Join
            - ''
            - - !Ref AWS::StackName
              - ''
              - !Ref AmazonLinuxAMIID
  WebServerInstance2:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref AmazonLinuxAMIID
      InstanceType: t2.micro
      SecurityGroupIds: !Split 
                - ","
                - Fn::ImportValue: 
                    !Sub "${CFNStackName}-WebInstanceSecurityGroup" 
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${CFNStackName}-PrivateSubnet2"
      Tags:
        - Key: name
          Value: !Join
            - ''
            - - !Ref AWS::StackName
              - ''
              - !Ref AmazonLinuxAMIID
  MyLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Subnets: [subnet-0a020212ce5904799, subnet-06cb288d620b67640]
      Name: LoadBalancerInformation
  HTTPlistener:
   Type: "AWS::ElasticLoadBalancingV2::Listener"
   Properties:
     DefaultActions:
       - Type: "redirect"
         RedirectConfig:
           Protocol: "HTTPS"
           Port: "443"
           Host: "#{host}"
           Path: "/#{path}"
           Query: "#{query}"
           StatusCode: "HTTP_301"
     Port: 80
     LoadBalancerArn: !Ref MyLoadBalancer
     Protocol: "HTTP"
  ALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 5
      Name: ALBTarget
      VpcId: 
        Fn::ImportValue:
          !Sub "${CFNStackName}-VPCId"
        
Outputs:
  WebServerInstance1:
    Value: !Join
      - ''
      - - !Ref AWS::StackName
        - ''
        - !Ref WebServerInstance1
  WebServerInstance2:
    Value: !Join
      - ''
      - - !Ref AWS::StackName
        - ''
        - !Ref WebServerInstance2
