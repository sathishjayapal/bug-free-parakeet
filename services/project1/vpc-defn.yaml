AWSTemplateFormatVersion: 2010-09-09
Description: Deploy a VPC - Project 1
Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: CF Lab VPC
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: CF Lab IGW
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: Public Subnet 1
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: Public Subnet 2
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: Private Subnet 1
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: Private Subnet 2
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: Public Route Table
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetRouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  WebInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WEBSIG
      GroupDescription: Enable SG for EC2 INSTANCE
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: WEBSIG
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: BASTIONSG
      GroupDescription: Enable SG for EC2 INSTANCE
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: BASTIONSG
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ALBSGP
      GroupDescription: Enable SG for ALB Instance
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ALBSGP
  PortEightySGIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ALBSecurityGroup
          - GroupId
      GroupId:
        Fn::GetAtt:
          - WebInstanceSecurityGroup
          - GroupId
  PortTwoTwoSGIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      GroupId:
        Fn::GetAtt:
          - BastionSecurityGroup
          - GroupId
Outputs:
  VPC:
    Description: VPC
    Value: !Ref MyVPC
    Export:
      Name: !Sub "${AWS::StackName}-MyVPC"
  PRIVATESUBNET1:
    Description: Private Subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PrivateSubnet1"
  PRIVATESUBNET2:
    Description: Private Subnet 2
    Value: !Ref PrivateSubnet1
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PrivateSubnet2"
  PUBLICSUBNET1:
    Description: Public Subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PublicSubnet1"
  PUBLICSUBNET2:
    Description: Public Subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PublicSubnet2"
  PUBLICSUBNET3:
    Description: Public Subnets
    Value: !Join
      - ','
      - - !Ref PublicSubnet1
        - !Ref PublicSubnet2
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PUBLICSUBNET3"
  WebSG:
    Description: public Web security group
    Value: !Ref WebInstanceSecurityGroup
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-WebInstanceSecurityGroup"
  ALBSG:
    Description: Public ALB Security group
    Value: !Ref ALBSecurityGroup
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-ALBSecurityGroup"
  BASSG:
    Description: BastionSecurityGroup
    Value: !Ref BastionSecurityGroup
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-BastionSecurityGroup"
